{"version":3,"sources":["js/01-promise-api.js"],"names":["promise","Promise","resolve","reject","canFulfill","Math","random","setTimeout","onFulfilled","result","console","log","onRejected","error","then","x","y","Error","z","catch","finally"],"mappings":"AAAA,IAAMA,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;EAC5C,IAAMC,UAAU,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EAEtCC,UAAU,CAAC,YAAM;IAChB,IAAGH,UAAU,EAAE;MACXF,OAAO,CAAC,gEAAgE,CAAC;IAC7E;IAEAC,MAAM,CAAC,kDAAkD,CAAC;EAC3D,CAAC,EAAE,IAAI,CAAC;AACb,CAAC,CAAC;;AAEF;;AAEA,SAASK,WAAWA,CAACC,MAAM,EAAC;EACxBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1CD,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;AACvB;AAAC;AAED,SAASG,UAAUA,CAACC,KAAK,EAAC;EACtBH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;AACtB;AAAC;AAEDb,OAAO,CACHc,IAAI,CAACN,WAAW,CAAC,CACjBM,IAAI,CAAC,UAAAC,CAAC,EAAI;EACVL,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEI,CAAE,CAAC;EAEtB,OAAO,EAAE;AACV,CAAC,CAAC,CACDD,IAAI,CAAC,UAAAE,CAAC,EAAI;EACVN,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEK,CAAC,CAAC;EAEnB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAEzC,OAAO,CAAC;AACT,CAAC,CAAC,CACDH,IAAI,CAAC,UAAAI,CAAC,EAAI;EACVR,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEO,CAAC,CAAC;AACrB,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAN,KAAK;EAAA,OAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;AAAA,EAAC,CAClCO,OAAO,CAAC;EAAA,OAAMV,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAAA,EAAC","file":"01-promise-api.1ee98991.js","sourceRoot":"../src","sourcesContent":["const promise = new Promise((resolve, reject) => {\n     const canFulfill = Math.random() > 0.5;\n \n     setTimeout(() => {\n      if(canFulfill) {\n          resolve('Промис выполнился успешно, с результатом (исполнен, fulfilled)');\n      }\n\n      reject('Промис выполнился с ошибкой (отклонён, rejected)');\n     }, 2000);\n});\n\n// promise.then(onFulfilled, onRejected);\n\nfunction onFulfilled(result){\n    console.log(\"onFulfilled -> onFulfilled:\");\n    console.log(result);\n};\n\nfunction onRejected(error){\n    console.log(\"onRejected -> onRejected:\");\n    console.log(error);\n};\n\npromise\n   .then(onFulfilled)\n   .then(x => {\n    console.log(\"x :\", x );\n\n    return 10;\n   })\n   .then(y => {\n    console.log(\"y:\", y);\n\n     throw new Error('ошибка в третьем then');\n\n    return 5;\n   })\n   .then(z => {\n    console.log(\"z:\", z);    \n   })\n   .catch(error => console.log(error))\n   .finally(() => console.log('Я буду выполнен в любом случае'));\n"]}